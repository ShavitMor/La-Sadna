# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

permissions:
  id-token: write
  contents: read
  checks: write

on:
  push:
    branches: [ "*" ] 
jobs:
  build:

    runs-on: ubuntu-latest
    environment: env
    

    concurrency:
      group: spooky-db-usage
      cancel-in-progress: false

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: |
          cd code
          mvn -B -DskipTests package --file pom.xml
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}          
          DB_PASSWORD: ${{ secrets.DB_PASSWORD}}
      - name: Run Tests
        if: false
        run: |
          cd code
          mvn --batch-mode -Dmaven.test.failure.ignore=true test
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}          
          DB_PASSWORD: ${{ secrets.DB_PASSWORD}}
      - name: Report
        uses: dorny/test-reporter@v1
        if: false && (success() || failure())
        with:
          name: Maven Tests
          path: code/target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true